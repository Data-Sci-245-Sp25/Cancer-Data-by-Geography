---
title: "Methods"
format: html
editor: visual
---

# Methods

```{r}
#| echo: false
#| warning: false

install.packages("gganimate")
install.packages("gifski")

library(tidyverse)
library(readxl)
library(sf)
library(tidycensus)
library(ggplot2)
library(gganimate)
library(gifski)
```

For data analysis of cancer data by geographic region, all data processing was done in the R coding language with the end goal of producing data tables and other visualizations, including maps and graphs, that accurately report the rates of cancer death across geographies in Multnomah County over ten years. Given the highly sensitive nature of these data, only the aggregate data is available to the public, making many code samples on this page non-functional.

### Data

This project utilizes cancer mortality data gathered in Multnomah county between 2013 and 2023. This data was gathered at the individual level, meaning the information in each row of data corresponds to the same individual. This data set contains variables that correspond to date of death, zip code of residence, fips code of residence, age at time of death, sex, marital status, level of education, veteran status, ethnicity and race, occupation, industry of occupation, cause of death, if the death was tobacco related, and comorbidities at time of death. Our project concerns itself with the following variables:

-   **dresstatefips, drescountyfips, drescityfips, ddrestractm and ddrestractsuf:** variables relating to the location of death, coded in FIPS code. These variables are critical for determining *where* cancer moralities are occurring. FIPS codes, or Federal Information Processing Standards codes, are used by the United States Federal Government to ensure consistent data collection across agencies. The smallest units included in these data, FIPS tracts, are drawn so each tract includes a population of approximately 2,500 to 8,000 people and favor boundary lines drawn on physical features such as roads or rivers, but may be drawn on legal boundaries when no physical boundary is available. FIPS tracts were later converted to PUMA, or Public Use Microdata Area codes, which are used within a state to identify geographies with populations of at least 100,000 people and are based on census tracts. PUMA codes were favored over FIPS codes or comparable systems, like ZIP codes, for thier compatibility with data collected in the American Community Survey and data work conducted by the Multnomah County Health Department.

-   **dmcaACME:** reports primary cause of death. This variable was used to isolate the top three most common kinds of cancer death. These results were reported as ICD-10 codes, a system used to code health problems across a standardized set of categories. For our analysis, we were only concerned with data relating to the top 3 cancer types

-   **ddodyear:** reports year of death. This variable was used to group observations by year and obtain aggregate data for analysis.

Our other major data source was the ACS, or American Community Survey, database. The American Community Survey is an annual survey conducted by the United States Census Bureau to obtain year to year demographic changes in the United States population. These data are not as comprehensive as the full United States Decennial Census, which attempts to gain a complete demography of the country, but are collected more frequently, as the Decennial Census is only completed every ten years while the American Community Survey is conducted annually. Thus, while ACS population data take the form of estimates rather than actual numbers, they are the preferred data source for this project. Our project concerns itself with the following variable:

-   **B01003_001:** reports total population estimate by PUMA region. This is later used to calculate rate of mortality by geography.

### Initial Data Cleaning

#### Multnomah County Public Health Department Data

To transform the raw data into clean aggregate data, manipulation of the data set was completed in R. Numerous packages from the CRAN were downloaded to assist with analysis

The steps taken to clean these data are as follows:

1.  Loaded the data into our coding environment
2.  Concatenated composite FIPS code variables into one FIPS code
3.  Identify the top 3 kinds of cancer death and limit the data to these types
4.  Converted FIPS codes to PUMA codes
5.  Create an aggregated data set of the number of each type of cancer death by year and PUMA code.

The following code chunk includes the code used to create our aggregated data set used for statistical analysis. This code will produce no results, as the data used in it's non-aggregated form is too sensitive for public use.

```{r}
#| warning: false

#Step 1: load raw data
#rawData <- read_csv() #empty as original .csv file is not publically available


#Step 2: concactenate fips
#create padtract with 4 digits
#withfips <- rawData|> mutate(padtract= str_pad(ddrestract, width = 4, pad = "0"))

# create padtractsuf with 2 digits
#withfips <- withfips|> mutate(padtractsuf = str_pad(ddrestractsuf, width = 2, pad = "0"))

#concactenate into fipscode
#withfips <- withfips|> mutate(fipscode = paste("41051", padtract, padtractsuf, sep = ""))

#remove padded columns
#withfips <- withfips|> select(-padtract, -padtractsuf)


#Step 3: identify and filter data to only include the top 3 types of cancer death
#filter to only c and d icd10 codes
#icdCodes<-read_csv("../multCoData/icd10-codes.csv")

#cancerOnlyData <- withfips |> filter(startsWith(dmcaACME, "C") | startsWith(dmcaACME, "D"))

#cancerOnlyData <-cancerOnlyData |> mutate(diseaseSite=icdCodes$Category[match(dmcaACME, icdCodes$`ICD-10 Code`)])

#cancer10y <- cancerOnlyData|> filter(ddodyear >= 2013)

#Step 4: Convert to PUMA codes
#puma <- read_csv("~/multCoData/2020_Census_Tract_to_2020_PUMA.csv")

#puma <- puma|> filter(STATEFP == 41)

#puma <- puma|> mutate(across(everything(), as.double))

#tidydata <- cancerOnlyData |> left_join(puma, by = c("drescountyfips" = "COUNTYFP", "ddrestract" = "TRACTCE"))

#Step 5: Create an aggregated dataset where independent observations are number of cancer deaths.
#aggregatedData <-cancerOnlyData %>% group_by(ddodyear,diseaseSite,pumaCode) %>% summarise(totals=n())

#prefixAg <- aggregatedData %>% mutate(PUMA = paste("41", pumaCode, sep = ""))

#mutateAg <- prefixAg |> mutate(pumasuffix = sub('^41051', '', PUMA))
#mutateAg <- mutateAg |> mutate(newPUMA = paste("41013", pumasuffix, sep = ""))
```

This code produces the data set aggregatedData, in which each observation is the number of cancer deaths of a specific type in a specific PUMA region for a specific year between 2013 and 2023. With our data in this form, we can next calculate the rate of mortality by region.

#### American Community Survey Data

Now that this aggregated data has been assembled with the number of cancer deaths in each region, proportions can be obtained with ACS Data.

The steps taken to form these data are as follows:

1.  Load our new data set into Posit Cloud
2.  Gather total population estimates for each PUMA code across all years
3.  Join the two data sets and derive population proportions by dividing the number of cancer deaths for each cancer type by the total population estimate for that PUMA tract

For this stage of data processing, all analysis was done by year, repeating each code chunk for every year. For the sake of legibility, sample code is only provided for 2013. Wherever the number 2013 is present, it was changed to reflect the accurate year of the data being manipulated

```{r}
# Step 1: Load the data
#prefixAg <- read_csv("prefixAg.csv", col_types = cols(ddodyear = col_character(),PUMA = col_character()))
#mutateAg <- read_csv("mutateAg.csv", col_types = cols(ddodyear = col_character(), PUMA = col_character(), newPUMA = col_character()))


#Step 2: Gather acs data for each year using tidycensus
#popData2013 <- get_acs(
    #geography = "public use microdata area",
    #variables = c(total_population = "B01003_001"),
    #state = "OR",
    #year = 2013,
    #survey = "acs5",
    #geometry = TRUE, output = "wide") 

#Step 3: Join datasets and derive population porportions
#Ag13 <- mutateAg|> filter(ddodyear == 2013)

#CancerRates2013 <- popData2013 |> right_join(Ag13, by = c("GEOID" = "newPUMA")) |> mutate(rate_per_100k = (totals / total_populationE) * 100000)
```

### Visualization Creation

The last step in our project was to represent our data visually.

#### Maps

Our primary visualization was a series of maps, grouped by cancer type. These maps visually represent the changing proportions over time.

The steps taken to generate these maps are as follows:

1.  Generate dataframes that consist exclusively of the information needed to create a map
2.  Generate maps based on these dataframes

Sample code for 2013 map generation is shown below

```{r}
#Step 1: Generates dataframes for map creation
#CancerRatesLung2013 <- CancerRates2013 %>% filter(diseaseSite == "Lung")
#CancerRatesBreast2013 <- CancerRates2013 %>% filter(diseaseSite == "Breast")
#CancerRatesPancreas2013 <- CancerRates2013 %>% filter(diseaseSite == "Pancreas")

# Step 2: Generate maps based on these dataframes
#ggplot(CancerRatesLung2013) + geom_sf(mapping=aes(fill = rate_per_100k)) + scale_fill_viridis_c(name = "Lung Cancer Deaths/100k residents",limits = c(0, 50)) + theme_void() + labs(title="Estimated lung cancer deaths per 100k residents, 2013")

#ggplot(CancerRatesBreast2013) + geom_sf(mapping=aes(fill = rate_per_100k)) +scale_fill_viridis_c(name = "Breast Cancer Deaths/100k residents",limits = c(0, 25)) + theme_void() + labs(title="Estimated breast cancer deaths per 100k residents, 2013")

#ggplot(CancerRatesPancreas2013) + geom_sf(mapping=aes(fill = rate_per_100k)) + scale_fill_viridis_c(name = "Pancreas Cancer Deaths/100k residents",limits = c(0, 20)) + theme_void() + labs(title="Estimated pancreas cancer deaths per 100k residents, 2013")
```

#### Animated Maps

Our final visualization combined the maps for all ten years into one gif for easier viewing.

The steps taken to generate these maps are as follows:

1.  Combine dataframes that include mortality rates for each year.
2.  Generate maps based on this dataframe with the gganimate package

```{r}
#Step 1: Combined Dataframe
#CancerRates <- bind_rows(CancerRates2013, CancerRates2014, CancerRates2015, CancerRates2016, CancerRates2017, CancerRates2018, CancerRates2019, CancerRates2020, CancerRates2021, CancerRates2022)
#CancerRatesLung <- CancerRates %>% filter(diseaseSite == "Lung")

#Step 2: Generate Map
#ggplot(CancerRatesLung) + geom_sf(mapping=aes(fill = rate_per_100k)) + scale_fill_viridis_c(name = "Lung Cancer Deaths/100k residents",limits = c(0, 50) + theme_void() + labs(title= "Lung Cancer Deaths/100k residents, 2013 - 2022: {current_frame}") + transition_manual(ddodyear) 

```

### Statistical Analysis

The difference between the geographic areas" average mortality rates for each type of cancer was compared with a one way ANOVA. If significant differences were indicated at an alpha level of 0.05, post-hoc pairwise comparisons were done using Tukey's Honest Significant Differences test.

```{r}
#oneWayAnovaLung <- aov(CancerRatesLung$rate_per_100k ~ CancerRatesLung$pumaCode)
#summary(oneWayAnovaLung)
#TukeyHSD(oneWayAnovaLung, conf.level = .95)
```
